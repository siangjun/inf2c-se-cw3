Make bike just DateRange whan locking

Make tests for DateRange::overlaps function, that also check the throws

The bike can have multiple booking at the same time for different DateRanges, the code will reflect that, but the 
	design pattern needs to reflect that
	Bike is not holding bookings for themselves, they are instead holding the date ranges for which they are taken
	The only thing that is holding bookings is server
	And the booking is holding customer and a set of quotes that were booked with this booking

Also the Booking does not extend the functionality of Quote, it just has it as data
	(there are problems with initializing the quote inside the Booking,
		have to make a copy, of already a class of which all data is already final)

I don't know if you need function parameters in the design, but I'll be noting what I have added and deviated

Make booking deliverable, as it will be easier to determine what booking the delivery it talking about and every booking has exactly one bike

The server now has no data about bookings (all the relevant data is in the bikes)

getQuotes
	isTaken now takes a parameter of query
	matchesQuery now takes query and bike parameters
	
	btw forgot that when there are no found available quotes to extend the query by 3 days each way
	

bookQuote
	This now also calls customer.addBooking on success
	
		
Testing:
	Shouldn't we write the unit test firsts before doing the actual code so we know what we're suppose to be aiming for?	

	A lot of classes are data structures with all final methods, which means that they are very easy to test for system testing
	What will be needed to be done is some kind of bike factory, so Server can be initialized with it
		Server then compared to the design will not hold a list of bikes, but will hold a bike factory of bikes that will have some method
		that returns all the bikes in the list
